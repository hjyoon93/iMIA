# Properties to be sent to the BPMN translator, by reflection.
# Java bean attributes with the same name will be set to these values


# Common prefix of BPMN entities
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.BPMNEntityNamePrefix=BPMN_
# Common prefix of BPMN attributes
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.BPMNAttributeNamePrefix=BPMNattrib_
# Name of top BPMN entity
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.BPMNEntityName=BPMN_Entity
# Name of top entity in the conceptual model
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.rootConceptualModelEntityName=MIAEntity
# Name o BPMN textual DOM children.
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.BPMNTextContentAttributeName=BPMN_textContent
# Name of relation that maps a BPMN thing to an element in the conceptual model.
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.BPMNConceptualModelMappingName=BPMN_hasConceptualModelElement
# Name of relation from parent XML tag to child XML element.
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.BPMNParentChildRelationName=BPMN_hasChildTag
# JSON that specifies the mapping from entities in concept model to entities in BPMN. The '@' prefix can be used to refer to Camunda classes.
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.JSONBPMNConceptualModelMap={\
		'definitions':'Mission',\
		'@org.camunda.bpm.model.bpmn.instance.Activity':'Task',\
		'lane':'Performer',\
		'participant':'Performer',\
		'@org.camunda.bpm.model.bpmn.instance.ItemAwareElement':'Asset',\
		'@org.camunda.bpm.model.bpmn.instance.DataAssociation':'Service',\
		'parallelGateway':'ANDPrecedenceTaskList',\
		'exclusiveGateway':'ORPrecedenceTaskList',\
		'complexGateway':'ORPrecedenceTaskList',\
		'inclusiveGateway':'ORPrecedenceTaskList',\
		'sequenceFlow':'PrecedenceTask',\
		'collaboration':'Service',\
		'messageFlow':'Asset'\
	}
# Concepts that should not be added to roles in relationships. This json list can be used to avoid sub-entities re-declaring roles of super-entities.
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.JSONConceptsNotToAddRole=['Service']
# If true, BPMN attributes with names that do not match with typedb name patter will be ignored
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.ignoreInvalidAttributeName=true
# If true, mapping from BPMN elements to entities in the conceptual model will be generated
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.mapBPMNToConceptualModel=true
# Name of the relation Mission -> isCompoundBy -> Task
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.isCompoundByRelationName=isCompoundBy
# Name of the relation Task -> isPerformedBy -> Performer
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.isPerformedByRelationName=isPerformedBy
# Name of the relation Task -> requires -> Resource
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.providesRelationName=provides
# List of entities that should contain a special attribute for sorting (because they are sensitive to ordering).
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.JSONSortableEntities=['waypoint']
# Name (before appending prefixes) of the special attribute to be used to sort the entities in JSONSortableEntities
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.sortAttributeName=sort
# Name of the universal identifier attribute.
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.UIDAttributeName=UID
# JSON map specifying common super entities for some BPMN entities. 
# The '@' prefix can be used to refer to Camunda classes. 
# There's no need to include the prefixes in names.
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.JSONCommonBPMNSuperEntityMap={\
		'@org.camunda.bpm.model.bpmn.instance.Activity' : 'Activity',\
		'@org.camunda.bpm.model.bpmn.instance.Gateway' : 'Gateway'\
	}
# Name of the relation that represents the transitive closure of gateway precedence.
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.BPMNGatewayTransitiveChainRelationName=BPMN_gatewayTransitiveChain
# JSON list  specifying names of entities/attributes/relations to be skipped in the basic sanity check.
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.JSONNamesToIgnoreInSanityCheck=['isCompoundBySetOfTask','isPrecededBySetOfTask','provides']
# Name of the transitive ancestor-descendant relationship of BPMN/XML tags (useful when deleting everything below BPMN_definitions)
edu.gmu.c4i.dalnim.bpmn2typedb.encoder.EncoderImpl.BPMNTransitiveAncestorRelationName=BPMN_hasChildTagTransitive

# Name of the schema TypeQL file to write in the output folder. 
edu.gmu.c4i.dalnim.bpmn2typedb.Main.schemaFileName=schema.tql
# Name of the data TypeQL file to write in the output folder. 
edu.gmu.c4i.dalnim.bpmn2typedb.Main.dataFileName=data.tql